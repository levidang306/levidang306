name: Realtime Development Stats & Dynamic README

on:
  schedule:
    - cron: '30 * * * *'     # Run every hour at 30 minutes past
    - cron: '0 */6 * * *'    # Every 6 hours for comprehensive stats
  push:
    branches: [main]
    paths-ignore:
      - "README.md"
  workflow_dispatch:
    inputs:
      force_update:
        description: "Force update even if no changes detected"
        required: false
        default: "false"
        type: boolean
      update_type:
        description: "Type of update to perform"
        required: false
        default: "full"
        type: choice
        options:
          - full
          - stats_only
          - activity_only

permissions:
  contents: write # Required for committing changes
  actions: read
  issues: read # For better GitHub activity tracking
  pull-requests: read

jobs:
  # WakaTime Stats Integration
  waka-readme:
    name: Update WakaTime Stats
    runs-on: ubuntu-latest
    steps:
      - name: Update WakaTime Stats
        uses: anmol098/waka-readme-stats@master
        with:
          WAKATIME_API_KEY: ${{ secrets.WAKATIME_API_KEY }}
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          SHOW_OS: "True"
          SHOW_PROJECTS: "True"
          SHOW_TIMEZONE: "True"
          SHOW_LANGUAGE: "True"
          SHOW_LOC_CHART: "True"
          SHOW_COMMIT: "True"
          SHOW_DAYS_OF_WEEK: "True"
          SHOW_LANGUAGE_PER_REPO: "True"
          SHOW_EDITORS: "True"
          SHOW_SHORT_INFO: "True"
          SHOW_PROFILE_VIEWS: "True"
          SHOW_TOTAL_CODE_TIME: "True"
          COMMIT_BY_ME: "True"
          
  # Comprehensive README Update
  update-comprehensive:
    name: Update Comprehensive Stats
    runs-on: ubuntu-latest
    needs: waka-readme
    timeout-minutes: 20
    
    steps:
      - name: 🛒 Checkout Repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_TOKEN || secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: � Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: 📦 Install Dependencies
        run: |
          npm install axios moment cheerio node-fetch
          echo "✅ Enhanced dependencies installed"

      - name: 📊 Generate GitHub Stats
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN || secrets.GITHUB_TOKEN }}
        run: |
          echo "🔍 Generating comprehensive GitHub statistics..."
          node -e "
            const { execSync } = require('child_process');
            const fs = require('fs');
            
            // Get repository stats
            const stats = {
              commits: execSync('git rev-list --count HEAD').toString().trim(),
              branches: execSync('git branch -r | wc -l').toString().trim(),
              contributors: execSync('git shortlog -sn | wc -l').toString().trim(),
              files: execSync('find . -type f -name \"*.js\" -o -name \"*.ts\" -o -name \"*.py\" -o -name \"*.java\" | wc -l').toString().trim(),
              lines: execSync('find . -name \"*.js\" -o -name \"*.ts\" -o -name \"*.py\" -o -name \"*.java\" | xargs wc -l | tail -1 | awk \"{print \\$1}\"').toString().trim()
            };
            
            fs.writeFileSync('.github/temp/repo-stats.json', JSON.stringify(stats, null, 2));
            console.log('📈 Repository stats generated:', stats);
          "

      - name: 🌐 Fetch External Data
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN || secrets.GITHUB_TOKEN }}
        run: |
          mkdir -p .github/temp
          
          # GitHub comprehensive activity
          echo "� Fetching comprehensive GitHub activity..."
          curl -H "Authorization: Bearer $GITHUB_TOKEN" \
               -H "Accept: application/vnd.github.v3+json" \
               "https://api.github.com/users/levidang306/events?per_page=50" \
               > .github/temp/github-activity.json
          
          # GitHub user stats
          curl -H "Authorization: Bearer $GITHUB_TOKEN" \
               -H "Accept: application/vnd.github.v3+json" \
               "https://api.github.com/users/levidang306" \
               > .github/temp/github-user.json
          
          # Repository list for diversity tracking
          curl -H "Authorization: Bearer $GITHUB_TOKEN" \
               -H "Accept: application/vnd.github.v3+json" \
               "https://api.github.com/users/levidang306/repos?sort=updated&per_page=20" \
               > .github/temp/github-repos.json

      - name: 🔄 Run Enhanced Update Script
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN || secrets.GITHUB_TOKEN }}
          WAKATIME_API_KEY: ${{ secrets.WAKATIME_API_KEY }}
          UPDATE_TYPE: ${{ github.event.inputs.update_type || 'full' }}
        run: |
          echo "🚀 Starting comprehensive README update..."
          node .github/scripts/update-readme-advanced.js

      - name: 📝 Check for Changes
        id: check_changes
        run: |
          if git diff --quiet README.md; then
            echo "changed=false" >> $GITHUB_OUTPUT
            echo "ℹ️ No changes detected"
          else
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "✅ Changes detected"
            git diff --stat README.md
          fi

      - name: � Commit and Push Changes
        if: steps.check_changes.outputs.changed == 'true' || github.event.inputs.force_update == 'true'
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add README.md
          
          # Create comprehensive commit message
          commit_msg="🤖 Auto-update README: $(date -u +'%Y-%m-%d %H:%M UTC')

          📊 Updated comprehensive stats:
          - Real-time GitHub activity & repository metrics
          - Development time tracking (WakaTime)
          - Language & technology usage analytics
          - Inspirational tech quote
          
          🔄 Powered by Advanced GitHub Actions Automation
          ⚡ Update Type: ${{ github.event.inputs.update_type || 'scheduled' }}
          🎯 Trigger: ${{ github.event_name }}"
          
          git commit -m "$commit_msg"
          git push origin main
          echo "🎉 README successfully updated with comprehensive stats!"

      - name: 📊 Workflow Summary
        if: always()
        run: |
          echo "## 🎯 Comprehensive README Update Complete" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📈 Update Details" >> $GITHUB_STEP_SUMMARY
          echo "- **Trigger**: ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Update Type**: ${{ github.event.inputs.update_type || 'full' }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Repository**: ${{ github.repository }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Branch**: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Changes Applied**: ${{ steps.check_changes.outputs.changed || 'forced' }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Completion Time**: $(date -u)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🚀 Features Updated" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Real-time GitHub activity tracking" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ WakaTime coding statistics" >> $GITHUB_STEP_SUMMARY  
          echo "- ✅ Repository metrics & analytics" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Dynamic tech quotes & timestamps" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Language & technology insights" >> $GITHUB_STEP_SUMMARY
          
      - name: 🧹 Cleanup
        if: always()
        run: |
          rm -rf .github/temp
          echo "🗑️ Temporary files cleaned up"
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "✅ Changes detected in README.md"
            
            # Show detailed diff stats
            echo "📊 **Change Statistics**:" >> $GITHUB_STEP_SUMMARY
            echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
            git diff --stat README.md >> $GITHUB_STEP_SUMMARY
            echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
            
            # Show preview of changes (first 10 lines)
            echo "🔍 **Preview of Changes**:" >> $GITHUB_STEP_SUMMARY
            echo "\`\`\`diff" >> $GITHUB_STEP_SUMMARY
            git diff README.md | head -20 >> $GITHUB_STEP_SUMMARY
            echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          fi

          # Force update if requested
          if [ "${{ github.event.inputs.force_update }}" == "true" ]; then
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "🔄 Force update requested"
            echo "- **Force Update**: ✅ Enabled" >> $GITHUB_STEP_SUMMARY
          fi

      - name: 🚀 Commit and Push Changes
        if: steps.check_changes.outputs.changed == 'true'
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"

          # Add README.md with error handling
          if git add README.md; then
            echo "✅ README.md staged successfully"
          else
            echo "❌ Failed to stage README.md"
            exit 1
          fi

          # Create enhanced commit message
          COMMIT_MSG="🤖 Auto-update README: $(date -u +'%Y-%m-%d %H:%M:%S UTC')

          📊 **Updated Content**:
          - ⚡ Real-time GitHub activity and statistics
          - ⏰ Enhanced WakaTime coding metrics with visual progress bars
          - 💭 Fresh inspirational tech quote
          - 🕒 Precise timestamp with timezone
          - 📈 Comprehensive development environment tracking

          🔄 **Automation**: GitHub Actions workflow
          🎯 **Trigger**: ${{ github.event_name }}
          🆔 **Run ID**: ${{ github.run_id }}"

          if git commit -m "$COMMIT_MSG"; then
            echo "✅ Changes committed successfully"
            
            # Push with retry mechanism
            for i in {1..3}; do
              if git push origin main; then
                echo "🎉 README successfully updated and pushed!"
                echo "- **Commit**: ✅ Pushed to main branch" >> $GITHUB_STEP_SUMMARY
                echo "- **Attempts**: $i/3" >> $GITHUB_STEP_SUMMARY
                break
              else
                echo "⚠️ Push attempt $i failed, retrying..."
                sleep 2
                if [ $i -eq 3 ]; then
                  echo "❌ All push attempts failed"
                  echo "- **Commit**: ❌ Push failed after 3 attempts" >> $GITHUB_STEP_SUMMARY
                  exit 1
                fi
              fi
            done
          else
            echo "❌ Failed to commit changes"
            exit 1
          fi

      - name: 📊 Workflow Summary
        if: always()
        run: |
          echo "## 🎯 Final Summary" >> $GITHUB_STEP_SUMMARY
          echo "| Metric | Value |" >> $GITHUB_STEP_SUMMARY
          echo "|--------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| Workflow Status | ${{ job.status }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Changes Detected | ${{ steps.check_changes.outputs.changed || 'false' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Total Runtime | ${{ steps.update_start_time.outputs.duration || 'N/A' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Next Scheduled Run | Every 2 hours |" >> $GITHUB_STEP_SUMMARY

          echo "## 🔗 Quick Links" >> $GITHUB_STEP_SUMMARY
          echo "- [📄 Updated README](https://github.com/${{ github.repository }}#readme)" >> $GITHUB_STEP_SUMMARY
          echo "- [⚙️ Workflow File](https://github.com/${{ github.repository }}/blob/main/.github/workflows/update-readme.yml)" >> $GITHUB_STEP_SUMMARY
          echo "- [📜 Action History](https://github.com/${{ github.repository }}/actions/workflows/update-readme.yml)" >> $GITHUB_STEP_SUMMARY
          echo "- [🔧 Manual Trigger](https://github.com/${{ github.repository }}/actions/workflows/update-readme.yml)" >> $GITHUB_STEP_SUMMARY

          if [ "${{ job.status }}" == "success" ]; then
            echo "✅ **Workflow completed successfully!**" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Workflow encountered issues. Check logs above.**" >> $GITHUB_STEP_SUMMARY
          fi

          echo "🕒 **Completed at**: $(date -u)" >> $GITHUB_STEP_SUMMARY
